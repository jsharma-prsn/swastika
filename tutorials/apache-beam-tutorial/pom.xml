<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.jsharma.training</groupId>
	<artifactId>apache-beam-tutorial</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>jar</packaging>
	<properties>
		<main-class>edu.jsharma.training.ParquetIOTest</main-class>
		<java.version>1.8</java.version>
		<vault-java-driver.version>1.1.0</vault-java-driver.version>
		<google-clients.version>1.22.0</google-clients.version>
		<guava.version>20.0</guava.version>
		<hamcrest.version>1.3</hamcrest.version>
		<jackson.version>2.8.9</jackson.version>
		<joda.version>2.4</joda.version>
		<junit.version>4.12</junit.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-exec-plugin.version>1.6.0</maven-exec-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
		<mockito.version>1.9.5</mockito.version>
		<lombok.version>1.18.4</lombok.version>
		<slf4j.version>1.7.25</slf4j.version>
		<hadoop.version>2.7.3</hadoop.version>
		<maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
		<beam.version>2.9.0</beam.version>
	</properties>
		<repositories>
		<repository>
                <id>mvnrepository</id>
                <url>http://repo1.maven.org/maven2</url>
                <snapshots>
                    <enabled>false</enabled>
                </snapshots>
                <releases>
                    <enabled>true</enabled>
                </releases>
            </repository>
	</repositories>
	<profiles>
		<profile>
			<id>direct-runner</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<!-- Makes the DirectRunner available when running a pipeline. -->
			<dependencies>
				<dependency>
					<groupId>org.apache.beam</groupId>
					<artifactId>beam-runners-direct-java</artifactId>
					<version>2.9.0</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>flink-runner</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- Makes the FlinkRunner available when running a pipeline. -->
			<dependencies>
				<dependency>
					<groupId>org.apache.beam</groupId>
					<artifactId>beam-runners-flink_2.11</artifactId>
					<version>${beam.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>spark-runner</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<!-- Makes the Spark available when running a pipeline. -->
			<dependencies>
			<dependency>
				<groupId>org.apache.beam</groupId>
				<artifactId>beam-runners-spark</artifactId>
				<version>2.9.0</version>
			</dependency>
		</dependencies>
		</profile>
	</profiles>

	<dependencies>	
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-expression</artifactId>
		    <version>5.1.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.bettercloud</groupId>
			<artifactId>vault-java-driver</artifactId>
			<version>${vault-java-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-parquet</artifactId>
			<version>${beam.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-amazon-web-services</artifactId>
			<version>${beam.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>aws-java-sdk-s3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.dataformat</groupId>
					<artifactId>jackson-dataformat-cbor</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-extensions-sql</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-core</artifactId>
			<version>2.9.0</version>
		</dependency>

		<!-- Add slf4j API frontend binding with JUL backend -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<!-- When loaded at runtime this will wire up slf4j to the JUL backend -->
			<scope>runtime</scope>
		</dependency>

		<!-- Hamcrest and JUnit are required dependencies of PAssert, which is 
			used in the main code of DebuggingWordCount example. -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-okhttp</artifactId>
			<version>1.9.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<configuration>
					<rules>
						<dependencyConvergence />
					</rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<parallel>all</parallel>
					<threadCount>4</threadCount>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${maven-surefire-plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Ensure that the Maven jar plugin runs before the Maven shade plugin 
				by listing the plugin higher within the file. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
			</plugin>

			<!-- Configures `mvn package` to produce a bundled jar ("fat jar") for 
				runners that require this for job submission to a cluster. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-bundled-${project.version}</finalName>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/LICENSE</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main-class}</Main-Class>
										<Build-Number>1</Build-Number>
										<Specification-Title>${project.artifactId}</Specification-Title>
										<Specification-Version>${project.version}</Specification-Version>
										<Implementation-Title>${project.artifactId}</Implementation-Title>
										<Implementation-Version>${project.version}</Implementation-Version>
										<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
									</manifestEntries>
								</transformer>
							</transformers>
							<cleanupDaemonThreads>true</cleanupDaemonThreads>
							<resources>
								<resource>
									<directory>src/main/java</directory>
									<includes>
										<include>**/*json</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>